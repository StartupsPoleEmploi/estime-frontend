stages:
    - build-application
    - build-docker-image-recette
    - generate-docker-stack-recette
    - deploy-application-recette
    - build-docker-image-production
    - generate-docker-stack-production
    - deploy-application-production

build_frontend_application :
    stage: build-application
    image:
      name: registry.beta.pole-emploi.fr/customize-docker-images/angular-ng
      entrypoint: [""]
    script:
      - npm run build:prod
    rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - src/**/*
    artifacts:
      paths:
        - ./dist
    cache:
      key: "$CI_BUILD_REF_NAME"
      paths:
        - node_modules/

sonar_quality_analyse :
    stage: build-application
    image:
      name: sonarsource/sonar-scanner-cli:latest
    variables:
      SONAR_TOKEN: "${SONAR_BETA_TOKEN}"
      SONAR_HOST_URL: "${SONAR_BETA_PE_HOST_URL}"
      SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Defines the location of the analysis task cache
      GIT_DEPTH: 0 # Tells git to fetch all the branches of the project, required by the analysis task
    script:
    - sonar-scanner
    rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - src/**/*
    allow_failure: true
    cache:
      key: ${CI_JOB_NAME}
      paths:
      - .sonar/cache


build-docker-image-recette:
    stage: build-docker-image-recette
    image:
      name: gcr.io/kaniko-project/executor:debug
      entrypoint: [""]
    script:
      # build estime-frontend docker image and push it in containers registry
      - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
      - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/docker/recette/docker-image/Dockerfile --destination $CI_REGISTRY_IMAGE:release-candidate
    rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - src/**/*

generate-docker-stack-recette:
  stage: generate-docker-stack-recette
  image:
    # https://git.beta.pole-emploi.fr/customize-docker-images/p2cli.git
    name: registry.beta.pole-emploi.fr/customize-docker-images/p2cli
  script:
    - cd docker/recette
    - p2 -t estime-frontend-stack.yml.j2 -o estime-frontend-stack.yml
  artifacts:
    paths:
      - ./docker/recette
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - src/**/*

deploy_application_recette:
    stage: deploy-application-recette
    before_script:
      - apt-get update -qq
      - apt-get install -y -qq openssh-client rsync iputils-ping
      # add target server in known hosts
      - mkdir ~/.ssh
      - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
      - chmod 644 ~/.ssh/known_hosts
      # add SSH_PRIVATE_KEY in agent store
      - eval $(ssh-agent -s)
      - ssh-add <(echo "$SSH_PRIVATE_KEY")
      - mkdir -p ~/.ssh
    script:
      # rsync to activate if needed to update estime-frontend-stack.yml
      - rsync -avz --no-perms --no-owner --no-group -e 'ssh'  $CI_PROJECT_DIR/docker/commun/scripts/deploy.sh $CI_PROJECT_DIR/docker/recette/estime-frontend-stack.yml $HOST_SERVER_USER@$HOST_SERVER_IP:/home/docker/estime-frontend
      # exec deploy.sh to deploy docker stack estime-frontend or update estime-frontend image service
      - ssh $HOST_SERVER_USER@$HOST_SERVER_IP "cd /home/docker/estime-frontend && ./deploy.sh $CI_REGISTRY $CI_REGISTRY_USER $CI_REGISTRY_PASSWORD"
    when: manual

build-docker-image-production:
    stage: build-docker-image-production
    image:
      name: gcr.io/kaniko-project/executor:debug
      entrypoint: [""]
    script:
      # build estime-frontend docker image and push it in containers registry
      - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
      - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/docker/production/docker-image/Dockerfile --destination $CI_REGISTRY_IMAGE:release
    when: manual

generate-docker-stack-production:
  stage: generate-docker-stack-production
  image:
    # https://git.beta.pole-emploi.fr/customize-docker-images/p2cli.git
    name: registry.beta.pole-emploi.fr/customize-docker-images/p2cli
  script:
    - cd docker/production
    - p2 -t estime-frontend-stack.yml.j2 -o estime-frontend-stack.yml
  artifacts:
    paths:
      - ./docker/production
  when: manual

deploy_application_production:
    stage: deploy-application-production
    before_script:
      - apt-get update -qq
      - apt-get install -y -qq openssh-client rsync iputils-ping
      # add target server in known hosts
      - mkdir ~/.ssh
      - echo "$SSH_KNOWN_HOSTS_PROD" >> ~/.ssh/known_hosts
      - chmod 644 ~/.ssh/known_hosts
      # add SSH_PRIVATE_KEY in agent store
      - eval $(ssh-agent -s)
      - ssh-add <(echo "$SSH_PRIVATE_KEY_PROD")
      - mkdir -p ~/.ssh
    script:
      # rsync config files on server
      - rsync -avz --no-perms --no-owner --no-group -e 'ssh'  $CI_PROJECT_DIR/docker/commun/scripts/deploy.sh $CI_PROJECT_DIR/docker/production/estime-frontend-stack.yml $HOST_SERVER_USER@$HOST_SERVER_IP_PROD:/home/docker/estime-frontend
      # exec deploy.sh to deploy docker stack estime-frontend or update estime-frontend image service
      - ssh $HOST_SERVER_USER@$HOST_SERVER_IP_PROD "cd /home/docker/estime-frontend && ./deploy.sh $CI_REGISTRY $CI_REGISTRY_USER $CI_REGISTRY_PASSWORD"
    when: manual