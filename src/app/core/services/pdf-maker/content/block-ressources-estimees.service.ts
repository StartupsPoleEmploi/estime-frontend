
import { Injectable } from '@angular/core';
import { CodesAidesEnum } from '@app/commun/enumerations/codes-aides.enum';
import { DemandeurEmploi } from '@app/commun/models/demandeur-emploi';
import { SimulationAidesSociales } from '@models/simulation-aides-sociales';
import { DeConnecteRessourcesFinancieresService } from '../../demandeur-emploi-connecte/de-connecte-ressources-financieres.service';
import { DeConnecteSimulationAidesSocialesService } from "../../demandeur-emploi-connecte/de-connecte-simulation-aides-sociales.service";
import { AidesService } from '../../utile/aides.service';
import { DateUtileService } from '../../utile/date-util.service';
import { Style } from '../models/style';
import { Cell } from '../models/table/cell';
import { LayoutTable } from '../models/table/layout-table';
import { Table } from '../models/table/table';
import { TableElement } from '../models/table/table-element';
import { Text } from '../models/text';

@Injectable({ providedIn: 'root' })
export class BlockRessourcesEstimeesService {

  constructor(
    private aidesService: AidesService,
    private dateUtileService: DateUtileService,
    private deConnecteRessourcesFinancieresService: DeConnecteRessourcesFinancieresService,
    private deConnecteSimulationAidesSocialesService: DeConnecteSimulationAidesSocialesService
  ) {

  }

  public addElementTableMesRessourcesEstimees(content: Array<any>, demandeurEmploi: DemandeurEmploi, simulationAidesSociales: SimulationAidesSociales): void {
    this.addTableMesRessourcesEstimees(content, simulationAidesSociales);
    this.addTableMesRessourcesEtAidesActuelles(content, demandeurEmploi, simulationAidesSociales);
    if(this.aidesService.hasAidesObtenirSimulationAidesSociales(simulationAidesSociales)) {
      this.addTablAidesObtenir(content, simulationAidesSociales);
    }
  }


  /******* méthode création table "Les aides que vous pourriez obtenir" */

  public addTablAidesObtenir(content: Array<any>, simulationAidesSociales: SimulationAidesSociales): void {
    let body = new Array<Array<Cell>>();

    this.addHeaderTable(body, simulationAidesSociales.simulationsMensuelles.length, 'Les aides que vous pourriez obtenir');

    if(this.aidesService.hasAide(simulationAidesSociales, CodesAidesEnum.AGEPI)) {
      const imageBase64 = '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';
      this.addRowAideObtenir(body, simulationAidesSociales, CodesAidesEnum.AGEPI, imageBase64);
    }
    if(this.aidesService.hasAide(simulationAidesSociales, CodesAidesEnum.AIDE_MOBILITE)) {
      const imageBase64 = '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';
      this.addRowAideObtenir(body, simulationAidesSociales, CodesAidesEnum.AIDE_MOBILITE, imageBase64);
    }
    if(this.aidesService.hasAide(simulationAidesSociales, CodesAidesEnum.PRIME_ACTIVITE)) {
      const imageBase64 = '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';
      this.addRowAideObtenir(body, simulationAidesSociales, CodesAidesEnum.PRIME_ACTIVITE, imageBase64);
    }

    content.push(this.createTableElement(body, simulationAidesSociales.simulationsMensuelles.length));
  }

  private addRowAideObtenir(body: Array<Array<Cell>>, simulationAidesSociales: SimulationAidesSociales, codeAideToAdd: string, imageAideBase64: string): void {
    const row = new Array<Cell>();
    row.push(this.createCellImageRessource(imageAideBase64));
    //création des cellules pour chaque simulation mensuelle
    simulationAidesSociales.simulationsMensuelles.forEach(simulationMensuelle => {
      let montant = 0;
      for (let [codeAide, aide] of Object.entries(simulationMensuelle.mesAides)) {
        if(aide && codeAide === codeAideToAdd) {
          montant = aide.montant;
        }
      }
      row.push(this.createCellMontant(montant));
    });
    body.push(row);
  }


  /************** méthode création table "Mes ressources et aides actuelles"  *****************/

  public addTableMesRessourcesEtAidesActuelles(content: Array<any>, demandeurEmploi: DemandeurEmploi, simulationAidesSociales: SimulationAidesSociales): void {

    let body = new Array<Array<Cell>>();

    this.addHeaderTable(body, simulationAidesSociales.simulationsMensuelles.length, 'Mes ressources et aides actuelles');

    this.addRowPaie(body, demandeurEmploi, simulationAidesSociales);
    if(demandeurEmploi.beneficiaireAidesSociales.beneficiaireASS) {
      this.addRowASS(body, simulationAidesSociales);
    }
    if(demandeurEmploi.beneficiaireAidesSociales.beneficiaireRSA) {
      this.addRowRSA(body, simulationAidesSociales);
    }
    if(demandeurEmploi.beneficiaireAidesSociales.beneficiaireAAH) {
      this.addRowAAHPourBeneficiaireAAH(body, simulationAidesSociales);
    }
    if(demandeurEmploi.ressourcesFinancieres.allocationsCAF) {
      if(!demandeurEmploi.beneficiaireAidesSociales.beneficiaireAAH
        && demandeurEmploi.ressourcesFinancieres.allocationsCAF.allocationMensuelleNetAAH > 0) {
        this.addRowAAH(body, demandeurEmploi, simulationAidesSociales);
      }
    }
    if(demandeurEmploi.beneficiaireAidesSociales.beneficiairePensionInvalidite) {
      this.addRowPensionInvalidite(body, demandeurEmploi, simulationAidesSociales);
    }
    if(demandeurEmploi.ressourcesFinancieres.revenusImmobilier3DerniersMois > 0) {
      this.addRowIMMO(body, simulationAidesSociales);
    }
    if(demandeurEmploi.ressourcesFinancieres.revenusCreateurEntreprise3DerniersMois > 0) {
      this.addRowINDP(body, simulationAidesSociales);
    }

    content.push(this.createTableElement(body, simulationAidesSociales.simulationsMensuelles.length));
  }

  private addRowPaie(body: Array<Array<Cell>>, demandeurEmploi: DemandeurEmploi, simulationAidesSociales: SimulationAidesSociales): void {
    const montant = demandeurEmploi.futurTravail.salaireMensuelNet;
    const imageBase64 = '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';
    const row = this.createRowMontant(body, montant , imageBase64, simulationAidesSociales.simulationsMensuelles.length);
    body.push(row);
  }

  private addRowASS(body: Array<Array<Cell>>, simulationAidesSociales: SimulationAidesSociales): void {
    const row = new Array<Cell>();
    const imageBase64 = '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';
    row.push(this.createCellImageRessource(imageBase64));
    //création des cellules pour chaque simulation mensuelle
    simulationAidesSociales.simulationsMensuelles.forEach(simulationMensuelle => {
      const montantAss = this.aidesService.getMontantASS(simulationMensuelle);
      row.push(this.createCellMontant(montantAss));
    });
    body.push(row);
  }

  private addRowRSA(body: Array<Array<Cell>>, simulationAidesSociales: SimulationAidesSociales): void {
    const row = new Array<Cell>();
    const imageBase64 = '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';
    row.push(this.createCellImageRessource(imageBase64));
    //création des cellules pour chaque simulation mensuelle
    simulationAidesSociales.simulationsMensuelles.forEach(simulationMensuelle => {
      const montantRSA = this.aidesService.getMontantRSA(simulationMensuelle);
      row.push(this.createCellMontant(montantRSA));
    });
    body.push(row);
  }

  private addRowAAH(body: Array<Array<Cell>>, demandeurEmploi: DemandeurEmploi, simulationAidesSociales: SimulationAidesSociales): void {
    const imageBase64 = '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';
    const montant = demandeurEmploi.ressourcesFinancieres.allocationsCAF.allocationMensuelleNetAAH;
    const row = this.createRowMontant(body, montant, imageBase64, simulationAidesSociales.simulationsMensuelles.length);
    body.push(row);
  }

  private addRowAAHPourBeneficiaireAAH(body: Array<Array<Cell>>, simulationAidesSociales: SimulationAidesSociales): void {
    const row = new Array<Cell>();
    const imageBase64 = 'iVBORw0KGgoAAAANSUhEUgAAAGQAAABgCAYAAADrc9dCAAAAAXNSR0IArs4c6QAAEWhJREFUeAHtXXuMXFUdPvfOa3f22X30jdYKMRYVpFQjGlsCIvCHQUPBVnwl8ocmxAgIGo2VxOADE4MRYjQmVISStkGolqYQpEVawNIKlTaWlmZbobt97LLbnZ2dmTtzr9/32zmXO7Oz8yh3Zx+9J5k9z/s753zf/Z3XvXt/hnqPznEcwyvinnvucePr1q3zZrnhTZs2uWXcxGkYWL16tVOqWeijm4w+FpQxDKMg7hasMnBOwGgSNPgEniCjA2rHjh0ic9WqVWrv3r3nJL/Ktk9ZseXLlzvop9SPfjrouyJ5mihN0rmQE66lV14iSMKyZcuM7u5uAX3p0qXGwYMHjcWLF0u8p6fH6OzsVOFwuICUkydPFsRrqX8qys6bN6/gjs9msw76ptBPSUefHfSdYWflypXq9OnTkk5ygJc0uRZiqgLHSwRJoCbAGdSAxsZGIx6PmwQ+FAoZpmnKD40wBgcHJSytyv9hvjc+3cO2bY+hmm8o4+3t7YDEcRjmL5fLOSQqmUzao6OjDjUIxUVzSFgtGlMWHC8R1Ag4lhci2trazIaGBnNgYMBcsGCB0Z/pjyWb+ldmDet6lPqQo5z5uEHmo13NvHD2OCNhGKrPUEafctShsBN5Kj7SubMz2pnu7e11Ojo67FQqZQ8NDdmaGPRdhrNqiJmQEC8ZemhqaWkxNBGRSMQcHh4OjbQPzE9HRu92lI0Z0GmZPcBX3xOQM2woc1PMavxl02BHH3DKWZblEgOcHA5l1WhLSUKKycAQxfnB5NAUi8VMkBEatofjZ2L/uzPnWN9RhhGvvvmzuKTjJENG5MGu9AW/bjFbkiAll06nbQ5luKltTP4VSRlHyERktLa2hs6ePRvCMBVKtg0uHAkPPQyNWD6L4T3nrkFj9jZl274aH2o/geErB+xywC5XDSklCeFyNj95i2aQDGhGaGRkJPxO++lLMmbiURC38JxbfB5ciDXNibjdvKZlsHt/U1NTFppSkpTiFZjpxYbaUYoMEoHVQyTblVyUUYkNARle1EqHiVFSJR4jZsSOGPLG5tDPKYA3PLEm5l4JbsSTYWDTY86dO9fUmkGBVthqPtN0/AkMU5d5BQTh8ghg+NrXNfK+GyLZSAJbBEtryqlTp2xsKm1cLctqrSkFGkLGUMDgaooTOOcMMovhKjIQf/uOgIzy4JfKJWbEjhgSS2JKbIkxsc5j7l5arCGMm0eOHAlh3AtRM3BxdCB0cvFwtP8FUBmsplzoqg8A1GRLpvMzHbl5b2HFlaGmgJzchRdemIMU0ZICDeFwpbWDYxw3fFzagtUwlm6RkcgQtCMgo3oKCksSO2JILIkpsSXGxBolBXs9ZYiG5COudkCdZBJHesyJOK2nmnv2Yfc9y3bchaBNesxRibmJJZcZlnEW2pCmlmDDmC3WkhAbggImdpIG1swmzmlCUKswzmYiyIolWs9cmTUtObya9EbP5goMFbXD1r/DyYYeYGtDWxxoiXP48GFn165davPmzTwpd0ytKjy15UEhz6ZwUChDFvywFcp8bjbjVM++EUtiyiELnpwDEnN9Yk4u9DpYhiscK4exLIsgI9rc3NyQyWTiZzqOP2ob9uX1bPhsrct0zFe6Bt63NhqNJhOJRAojUwZzirVkyZIs+iyTuyx7+XCJR+lgTY7QMWyZOEqnCzuG0z1bAap3v4glMSWweYwFc2JPDtgeIYTPN6g6KMcCJuaSELQjhGcXnGMCQvxjrpuYEltiTKyJObHPP2NSpt6YQI3kYVK+kGgIHryEsbEJ9h4+EUIsiSk1BE7maj6wI/asglyIhmB2H1MXZNKhEAPy86ktgZg8AhrXPMbuE1XNASd1kmJyQsdEHsFyLIYdehxqFMfyrPnt1sN7AjT9Q2DR2YtWYBRKAOMkME5ixZXGBO9O7KIh+u0QPgPXDsQEGuIfD64kakgeW4GamDNTcyCEMAGsifpoQpDEglKY+YHzDQHBVePM2YHYa+kuIToBu3RdVnydHvj+IOAFl1gXSzX1+rc4g3HMIeMuKFUuSKsegXKYkgtXQ4pfYMM4R1WqvqagZFUIEFNi6y3sxb4AcY5nKChahbWx95og7CMCxBYv2Lmjl1e0qyHeRB0up166TODXhkAlTMsSUltVQWk/EAgI8QNFH2UEhPgIph+iAkL8QNFHGQWrLB/lVhQ1PJhQu5952S23YuXHVcfcDjdeTaBWGQOn31F7duxzRX9+9VVuuFTgn9t2q2RiVLIuvvzDavEHJv9lzSkj5O9/2aZ+++Pfuzh87Xtr1LfXfcuNVxOoVUbPoePqp7fe64quRMj9P3xQvd3TK+V/cP/tdSFkyoasJ//8lAsMA1sf3Y6TAb6mVL3zQ0b1tdWn5JQQ8tpLr6tjbxyXHsYaY+L3nxxQu7e/VHWv/ZBRdWV1LDglhGxZv9Xt4tdvX+uGtxRpjZtRIuCHjBJipzyp7oQkhhLq2Sd2Ssdb21vULd+9WS1cskDiLz7zL3XqxOmKoPgho2IlU1Sg7oQ8vfkfKj2alu5e9cVVKhKNqGtvulriON9RWx/ZXhEKP2RUrGSKCtSdEO+wdP3aa6Tb13753Xfx/obVFx4rl4XDDxllK5jCzLoue//76hvq0GuHpbuLly5SH1mxTMIX5MOv7zmoeo/1Ya+wV33iytLv5vkhQ+P9hWU362BJfwALjXq7umpIwZ29Zkw7dIevW/Ouljy5vnBJrMvQ90OGlnf6xBlV7pfL8WXC+rq6aUgqmVLbNz3r9k7PGzrh6i9dqX5z9wMqa2XV81t3qXfODKo5Xe06W3w/ZHgF3nHfbXz4400qCP/x3ofU0MDZgrTJjtSNEK6sksNJ6U9zW5Pa+Ie/jutbW0er4n6EpGzb8LRae9tNBWX8kOEVeOOtN3ij48Ibfrdp9hLi3TckhkbUYw9sHgeAN2HLw9vGEeKHDG8d0zFcFw3pOXRM7X/5gPSfy9xLr/jYhFi8vueAGh1JyU7+tRf/oy751EelrB8yJqx0GmXUhRDvmdNnr79C/eyhn0wIwX133K8e/9MWyecErgnxQ8aElU6jjElfZVkZS+YD3efrilZXOl3713n2JJwzuCv3Q4aWP939SSdkJ1ZMeqXCVdMnr1pRFhPuTbhHoeOOnrtyP2SUrXQaZU46IVvyewrOHd+48yt4ZVX+rbEsBN/8/i1KnwJz2PJDRtkKp1GmsXHjxhC+iEZiIvgCHF/GasD7WXH8mvC/DC297W/umkbtnfFNWTD4wU/jf0OGcW43gh/3Aan+/v4MfOvo0aP2pGvIjEewzh0ICKkz4JWqCwiphFCd8wNC6gx4peoCQiohVOf8gJA6A16puoCQSgjVOT8gpM6AV6ouIKQSQnXODwipM+CVqgsIqYRQnfMDQuoMeKXqAkIqIVTn/ICQOgNeqbqyhOB/qsu/QlhJepA/DoFKmBYQgvN5vMU55vCRrTFhjjH2L0TjRAcJtSKAr1zLe1DEVuNMzL1yXEKKTfvgs0G0GqPwSaB+7wVB+NwRACEDxJTYeqV4seeH4QsyvQWpXoYTEOLF5L2EiWW5IYtcuBqiK8KnxbU2iR9S4WM6L/DfGwLE0gsusS6W6BICVRIDV/oCFGRhJ2I17C6+KIifGwJ5LAVXjTPnEGKvJQoheeNVSlsfY2GMc5zh7Tarex9MJY69lKuvCvyaESCGxJKY5rElzGLxjcI0ByF+kgZxA99bNPBRXxNs8fOlYZQN462TSMgIhUcjiUW2kbuo5lYEF7gIRJzYMy2ZOc9DI9KAPA2IM8DYwhsoWXx/Mbd//35n/fr1Y3MIrVXySr3shS/agQsYzDWNzHkEQlKu9CBQEwLEjhgSS2Kax1X2GISawjQHoeeee45xo6+vz6AJBX6gEReE+IOjpkSiKpa1Iqkm2Ci8mIUDVxsCDXb88dZ05wvAMg1MUyAhjZ/FH+I52BKx8f13h6TIHIJPyymojbZYaYOYHD6ylcMFObwwZ0FQtiu1+DGsEsb+H6229pzXpYkZsSOGxJKYEltijOnBxrTgEHtyQFfxY/x8g5E/qF1zOpRcPNDU9ytb5Wr7KMl5SompQgMdI/PviuXib4GQBMjg24ojIKT8x/jxiWuFLysrfCXTpiFEsoehSxglq2DRgp+JZhtPtqXn/oIVnacYV91tYjQn3f1zYkbs8hgSR0BrZYkxsSbmxJ4c0PFjyTKp0DQoVYe2XKlKuIgqRVIyYDSNIP+5PB1PNx/uSi78UcgJvSkSgj/jECA2xKgh3XKEmBE7YkgsiWkeW5tYE3NtYZpcyH88Qp1k6YuLxSCY1+QRCjXmf3H4/Jh8E5ZsjbAp0tLfcOLGdDh5Da4b+2DJuKaddwnpWDb+dGdq4WbYChkG9qOYtEeAbzL/G4U/ChwnNHnk7tTzKuPgJNIBgzb2JZx8shCYIbMUAnhTIGMUpKRYIWwmbpifev9dMbtxp6nM8/ZUmH0nBsSCmBAbYkSsiBmxI4bEkpgSW2JMrJEvlqT1rSsawkixlnjN5kF4DPkNKNaof2C/ERUwjXlRWCJpSEQGLk5HRy/NOtZCLJzbbGW3QfIs0x6Aq8whI2cMhY3IiVim8dVmq+MA7OOIxRzgkfaQQULkB1JSwCuNOaOs2byC/zGkltDmN22Bg10aCZNlLw2OoBLGhUAeH0M4Nzb8wFUWfhZ3hdVqdb3iZJxXsZLgCQC1T4ZChPWQiKQZ69BN+eaH3NUI2rjrc+ia9B+m7i30TOZZYJNCfgpawM10ChM49x8ZzBdWHlOxt448bWfdBaVYQ5hR0vQqCIniaCUKsEVbUCF93v0xNCyKcBR+GPlhNFIIQdglhXIpfAY7IQLtd9BPfZLBGzaLfmbR5wx8PtWToxHE6aeQj8VUWoYr3NgVTa+6GoKLgakYmFQwnMtdow3Dhwr2cLlppFkeBZZZRs5T4OWgRVmMg9IYVBxBg2hQjDL5f2ti7gJyRTuoYbhevuiMvBnj0C9umKXvaDS7T+cSQjJQRnbdCFv5FakQg3QhAv22gCHLuRajDxw44GoHsdeAjLtrUZmBoWtC891QPxp9iVBjQIiQgIZEUSm1IwLhYrsKvoky1BASo+vRvq5/pvgCGJlAg230VQhBf3k2JcM6+ipbBJLDlS3KZDC0c4iyajHfPQ4gEkKUSpGiDdzTfCg0Q06DQYoQQULQmBAaxiELwTGzSRBFPgw0Uj7uT5/yZ4pD9+RRNn06tJseuBg7gEW/OWSh20IIyeDKlJpCG+pZzhkYZVzNwBGJg5HH4VxNDACN+BqPkuCgwpKk0Moxj+jBvFgDRWUhVExO0AbcErA+RodKhBBokswhJIQVIi4+rtH1T2sf/ZH2cRHDAJmgh7hLCJlAf+hxI53jEM5dOLCSDaDejWMasCuRwTpKEsKMYlJojZImp9va2rTxYhO2XMX0G4mhXT76cJzFTDTIoK/J0D5l0xXHx1Knz988+G6DdJw+bkoeeYgPHuSoCaaLxAcpNnCSfQbwkNUUcJLdeDnN0BVNSAgLoG7J5/AFFWMS42KEUhNDU60LFiwwsFQWM3DQFiFhbMQi7IaBxhfUwzQKm+5Ok6DbyWfg2o2NWFjvgwD+gIfd29srR0+aiPxTQNEqYChbCspC90XjtFyvXxUwXmKgetoIohDDPQqHMhAhhilJhCaDBq8Y9lZYHPfmTccwgfe2i3H9qJth/qAl8lycB4U8m9JE8Ei9Gq3wyneXvd7E4rBmFMQwi8s1aoxz9OhRMazLJTKtjJEcjKdCAAnCT4yNeeV5rcl406dr2PvOFNsIbXBg5k58xjFnyKEsSeCpLQ8KGa5WIyjD66oiRF9QRAzZZxb3LIrk0HwoGiWEME2bgtPXz0QfN9C4ZmvwmYF+ysMlpu3cuVOX5Sqq7NCkCxb7BcNJcWY1cT2c6bLUHh3Ozzs66vpQZbeMmzgNAxO9RMi7XzuOFDpMX9+03rRawv8HO8YhWaxaRZEAAAAASUVORK5CYII=';;
    row.push(this.createCellImageRessource(imageBase64));
    //création des cellules pour chaque simulation mensuelle
    simulationAidesSociales.simulationsMensuelles.forEach(simulationMensuelle => {
      const montantAah = this.aidesService.getMontantAAH(simulationMensuelle);
      row.push(this.createCellMontant(montantAah));
    });
    body.push(row);
  }

  private addRowPensionInvalidite(body: Array<Array<Cell>>, demandeurEmploi: DemandeurEmploi, simulationAidesSociales: SimulationAidesSociales): void {
    const imageBase64 = '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';
    const montant = demandeurEmploi.ressourcesFinancieres.allocationsCPAM.pensionInvalidite;
    const row = this.createRowMontant(body, montant, imageBase64, simulationAidesSociales.simulationsMensuelles.length);
    body.push(row);
  }



  private addRowIMMO(body: Array<Array<Cell>>, simulationAidesSociales: SimulationAidesSociales): void {
    const montant = this.deConnecteRessourcesFinancieresService.getRevenusImmobilierSur1Mois();
    const imageBase64 = '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';
    const row = this.createRowMontant(body, montant, imageBase64, simulationAidesSociales.simulationsMensuelles.length);
    body.push(row);
  }

  private addRowINDP(body: Array<Array<Cell>>, simulationAidesSociales: SimulationAidesSociales): void {
    const montant = this.deConnecteRessourcesFinancieresService.getRevenusTravailleurIndependantSur1Mois();
    const imageBase64 = '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';
    const row = this.createRowMontant(body, montant, imageBase64, simulationAidesSociales.simulationsMensuelles.length);
    body.push(row);
  }


  /************** méthode création table "Mes ressources estimees"  *****************/

  public addTableMesRessourcesEstimees(content: Array<any>, simulationAidesSociales: SimulationAidesSociales): void {
    let body = new Array<Array<Cell>>();
    this.addHeaderTableMesRessourcesEstimees(body, simulationAidesSociales);
    this.addRowMontantTotalSimulationMensuelle(body, simulationAidesSociales, simulationAidesSociales.simulationsMensuelles.length);
    content.push(this.createTableElementMesRessourcesEstimees(body, simulationAidesSociales.simulationsMensuelles.length));
  }

  private addHeaderTableMesRessourcesEstimees(body: Array<Array<Cell>>, simulationAidesSociales: SimulationAidesSociales): void {
    const nbrMoisSimule = simulationAidesSociales.simulationsMensuelles.length;
    const row = new Array<Cell>();

    //add cellule1
    row.push(this.addTitleMesRessourcesEstimees('\n Avant reprise', '#D6D9E4', 1, 'center'));
    //add cellule2
    const titleCell2 = '\nDétail des ressources estimées après reprise d’emploi pour les ' + nbrMoisSimule + ' mois à venir';
    row.push(this.addTitleMesRessourcesEstimees(titleCell2, '#DEEEFF', 6, 'left'));
    //add cellules vides pour obtenir un nombre de colonnes = nbrMoisSimule + 1
    for (let i = 0; i < nbrMoisSimule - 1; i++) {
      row.push(new Cell());
    }
    body.push(row);
  }

  private addTitleMesRessourcesEstimees(titleCell2: string, fillColor: string, colspan: number, alignment: string): Cell {
    const cell = new Cell();
    cell.colSpan = colspan;
    cell.fillColor = fillColor;
    cell.style = new Style();
    cell.style.alignment = alignment;
    cell.style.background = fillColor;
    cell.style.bold = true;
    cell.style.color = '#23333C';
    cell.style.fontSize = 12;
    cell.text = titleCell2;
    return cell;
  }

  private addRowMontantTotalSimulationMensuelle(body: Array<Array<Cell>>, simulationAidesSociales: SimulationAidesSociales, nbrColumns: number): void {
    const row = new Array<Cell>();

    //add cellule montant total ressources actuelles

    const montantTotalRessourcesActuelles = simulationAidesSociales.montantRessourcesFinancieresMoisAvantSimulation;
    row.push(this.createCellMontantTotalSimulationMensuelle('Revenus & Aides', montantTotalRessourcesActuelles));
    //add des cellules pour chaque simulation mensuelle
    simulationAidesSociales.simulationsMensuelles.forEach(simulationMensuelle => {
      const libelleDate = this.dateUtileService.getLibelleDateStringFormatCourt(simulationMensuelle.datePremierJourMoisSimule);
      const montantTotal = this.deConnecteSimulationAidesSocialesService.calculerMontantTotalRessourcesMois(simulationMensuelle);
      row.push(this.createCellMontantTotalSimulationMensuelle(libelleDate, montantTotal));
    });

    body.push(row);
  }

  private createCellMontantTotalSimulationMensuelle(libelle: string, montantTotal: number): Cell {
    const cell = new Cell();
    cell.text = new Array<any>();
    this.addLibelleDateSimulationMensuelle(cell.text, libelle);
    this.addMontantTotalSimulationMensuelle(cell.text, montantTotal);
    return cell;
  }

  private addLibelleDateSimulationMensuelle(contenu: Array<any>, libelle: string): void {
    const text1 = new Text();
    text1.text = libelle + '\n';
    text1.style = new Style();
    text1.style.alignment = 'center';
    text1.style.bold = true;
    text1.style.color = '#3853B9';
    text1.style.fontSize = 10;
    contenu.push(text1);
  }

  private addMontantTotalSimulationMensuelle(contenu: Array<any>, montant: number): void {
    const text1 = new Text();
    text1.text = montant + ' €';
    text1.style = new Style();
    text1.style.alignment = 'center';
    text1.style.bold = true;
    text1.style.fontSize = 13;
    contenu.push(text1);
  }

  private createTableElementMesRessourcesEstimees(body: Array<Array<Cell>>, nbrColumns: number): TableElement {
    const tableElement = new TableElement();
    const layoutTable = new LayoutTable();
    layoutTable.hLineColor = '#DEEEFF';
    layoutTable.vLineColor = '#DEEEFF';
    tableElement.layout = layoutTable;
    tableElement.style = 'tableStyle3';
    tableElement.table = new Table();
    tableElement.table.body = body;
    tableElement.table.heights = [40, 35];
    tableElement.table.widths = this.getWithsColumns(nbrColumns);
    return tableElement;
  }

  /*********** méthode communes ********************/

  private addHeaderTable(body: Array<Array<Cell>>, nbrMoisSimule: number, title: string): void {
    const row = new Array<Cell>();
    row.push(this.createCellTitle('', '#DEEEFF', 1));
    row.push(this.createCellTitle(title, '#DEEEFF', 6));
    //on ajoute des cellules vides pour obtenir un nombre de colonnes = nbrMoisSimule + 1
    for (let i = 0; i < nbrMoisSimule - 1; i++) {
      row.push(new Cell());
    }
    body.push(row);
  }

  private createRowMontant(body: Array<Array<Cell>>, montant: number, imageBase64: string, nbrMoisSimule :number):  Array<Cell> {
    const row = new Array<Cell>();
    row.push(this.createCellImageRessource(imageBase64));
    //création des cellules pour chaque simulation mensuelle
    for (let i = 0; i < nbrMoisSimule; i++) {
      row.push(this.createCellMontant(montant));
    }
    return row;
  }

  private createTableElement(body: Array<Array<Cell>>, nbrColumns: number): TableElement {
    const tableElement = new TableElement();
    const layoutTable = new LayoutTable();
    layoutTable.hLineColor = '#DEEEFF';
    layoutTable.vLineColor = 'white';
    tableElement.layout = layoutTable;
    tableElement.style = 'tableStyle4';
    tableElement.table = new Table();
    tableElement.table.body = body;
    tableElement.table.widths = this.getWithsColumns(nbrColumns);
    return tableElement;
  }


  private createCellImageRessource(imageBase64: string): Cell {
    const cell = new Cell();
    cell.image = 'data:image/png;base64,' + imageBase64;
    cell.width = 40;
    cell.height = 40;
    cell.style = new Style();
    cell.style.alignment = 'center';
    return cell;
  }

  private createCellMontant(montant: number): Cell {
    const cell = new Cell();
    cell.text = '\n' + montant + ' €';
    cell.style = new Style();
    cell.style.alignment = 'center';
    cell.style.bold = true;
    return cell;
  }

  private createCellTitle(title: string, fillColor: string, colSpan: number): Cell {
    const cell = new Cell();
    cell.colSpan = colSpan;
    cell.fillColor = fillColor;
    cell.style = new Style();
    cell.style.background = fillColor;
    cell.style.color = '#1B2B67';
    cell.style.fontSize = 11;
    cell.text = title;
    return cell;
  }


  private getWithsColumns(nbrColumns: number): Array<number> {
    const widthMaxTable = 350;
    const widthColumn = widthMaxTable / nbrColumns;
    const widthsColumns = [100];
    for (let i = 0; i < nbrColumns; i++) {
      widthsColumns.push(widthColumn);
    }
    return widthsColumns;
  }

}